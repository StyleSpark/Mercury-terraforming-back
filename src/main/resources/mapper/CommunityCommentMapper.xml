<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matdongsan.api.mapper.CommunityCommentMapper">

    <insert id="insertCommunityComment" useGeneratedKeys="true" keyProperty="id" parameterType="com.matdongsan.api.dto.community.comment.CommentCreateRequest">
        INSERT INTO community_comments (community_id, user_id, parent_id, content)
        VALUES (#{communityId}, #{userId}, #{parentId}, #{content})
    </insert>

    <select id="selectComments" parameterType="com.matdongsan.api.dto.community.comment.CommentGetRequest" resultType="community_comments">
        SELECT id
              ,community_id
              ,user_id
              ,parent_id
              ,content
              ,created_at
         FROM community_comments
        WHERE community_id = #{communityId}
          AND parent_id IS NULL
          AND deleted_at IS NULL
        <if test="userId != null">
          AND user_id = #{userId}
        </if>
        <if test="content != null and content ==''">
          AND content LIKE CONCAT('%', #{content}, '%')
        </if>
     ORDER BY created_at DESC
        LIMIT #{size}
       OFFSET #{offset}
    </select>

    <select id="countCommunityComments" parameterType="com.matdongsan.api.dto.community.comment.CommentGetRequest" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM community_comments
        WHERE community_id = #{communityId}
          AND deleted_at IS NULL
        <if test="userId != null and userId ==''">
            AND user_id = #{userId}
        </if>
        <if test="content != null and content ==''">
            AND content LIKE CONCAT('%', #{content}, '%')
        </if>
    </select>

    <select id="selectCommentReplies" parameterType="com.matdongsan.api.dto.community.comment.CommentGetRequest" resultType="community_comments">
        SELECT id
              ,community_id
              ,user_id
              ,parent_id
              ,content
              ,created_at
         FROM community_comments
        WHERE parent_id = #{parentId}
          AND deleted_at IS NULL
     ORDER BY created_at ASC
        LIMIT #{size}
       OFFSET #{offset}
    </select>

    <select id="countCommentReplies" parameterType="com.matdongsan.api.dto.community.comment.CommentGetRequest" resultType="java.lang.Integer">
        SELECT COUNT(*)
          FROM community_comments
         WHERE parent_id = #{parentId}
           AND deleted_at IS NULL
    </select>

    <update id="updateComment" parameterType="com.matdongsan.api.dto.community.comment.CommentUpdateRequest">
        UPDATE community_comments
           SET content = #{content}
         WHERE id = #{id}
           AND user_id = #{userId}
           AND deleted_at IS NULL
    </update>

    <update id="softDeleteComment" parameterType="com.matdongsan.api.dto.community.comment.CommentDeleteRequest">
        UPDATE community_comments
           SET deleted_at = NOW()
         WHERE id = #{id}
           AND user_id = #{userId}
           AND deleted_at IS NULL
    </update>

</mapper>