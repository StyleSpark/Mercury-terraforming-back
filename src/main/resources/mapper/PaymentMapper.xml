<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matdongsan.api.mapper.PaymentMapper">

    <insert id="insertTempReservation"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO temp_reservation (
        order_id,
        property_id,
        user_id,
        reserved_date,
        reserved_time,
        info,
        deposit,
        status,
        created_at
        ) VALUES (
        #{orderId},
        #{propertyId},
        #{userId},
        #{reservedDate},
        #{reservedTime},
        #{info},
        #{deposit},
        #{status},
        NOW()
        )
    </insert>

    <select id="findTempByOrderId" resultType="com.matdongsan.api.vo.TempReservationVO">
        SELECT
        id AS tempId,
        order_id,
        property_id,
        user_id,
        info,
        reserved_date,
        reserved_time,
        deposit
        FROM temp_reservation
        WHERE order_id = #{orderId}
    </select>

    <insert id="insertConfirmedReservation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO reservations (
        order_id, property_id, user_id, reserved_date,reserved_time, info, deposit, status, created_at
        ) VALUES (
        #{orderId}, #{propertyId}, #{userId}, #{reservedDate}, #{reservedTime}, #{info}, #{deposit}, #{status}, NOW()
        )
    </insert>

    <insert id="insertPaymentHistory" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO payments (
        order_id,
        user_id,
        payment_key,
        amount,
        item_name,
        status,
        created_at
        ) VALUES (
        #{orderId},
        #{userId},
        #{paymentKey},
        #{amount},
        #{itemName},
        #{status},
        NOW()
        )
    </insert>


    <delete id="deleteTempByOrderId">
        DELETE FROM temp_reservation WHERE order_id = #{orderId}
    </delete>

    <insert id="createTicketPaymentHistory" parameterType="com.matdongsan.api.dto.payment.PurchaseTicketDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO payments (
            user_id,
            order_id,
            payment_key,
            amount,
            item_name,
            created_at,
            status
        ) VALUES (
            #{userId},
            #{orderId},
            #{paymentKey},
            #{amount},
            #{itemName},
            NOW(),
            '결제완료'
        )
    </insert>

    <insert id="createPurchaseTicket" parameterType="com.matdongsan.api.dto.payment.PurchaseTicketDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO purchase_ticket (
        user_id,
        order_id,
        ticket_id,
        created_at,
        remain_count,
        status
        )
        SELECT
        #{userId},
        #{orderId},
        tm.id,
        NOW(),
        tm.quantity,
        'ACTIVE'
        FROM ticket_master tm
        WHERE tm.id = #{ticketId}
    </insert>

    <select id="selectTicketInfoData" resultType="ticket">
        SELECT ID
              ,NAME
              ,DESCRIPTION
              ,PRICE
              ,QUANTITY
        FROM ticket_master
       WHERE 1=1
        <if test="ticketId != null">
            AND ID = #{ticketId}
        </if>
    </select>

    <update id="consumeTicket">
       UPDATE purchase_ticket
          SET remain_count = remain_count - 1,
              used_at = NOW(),
              status = CASE WHEN remain_count - 1 = 0 THEN 'USED' ELSE status END
        WHERE id = (
       SELECT id
         FROM purchase_ticket
        WHERE user_id = #{userId}
          AND remain_count > 0
          AND status = 'ACTIVE'
     ORDER BY created_at ASC
        LIMIT 1
        )
    </update>

    <select id="checkReservationConflictForUpdate" resultType="com.matdongsan.api.vo.ReservationVO">
        SELECT * FROM reservations
        WHERE property_id = #{propertyId}
        AND reserved_date = #{reservedDate}
        AND reserved_time = #{reservedTime}
        FOR UPDATE
        LIMIT 1
    </select>

<!--    동시성 테스트를 위해서 작성된 쿼리들-->
    <select id="countReservationsByPropertyAndTime" resultType="int">
        SELECT COUNT(*) FROM reservations
        WHERE property_id = #{propertyId}
        AND reserved_date = CAST(#{reservedDate} AS DATE)
        AND reserved_time = CAST(#{reservedTime} AS TIME)
    </select>

    <insert id="insertTempReservationForTest">
        INSERT INTO temp_reservation (
        order_id, property_id, user_id,
        reserved_date, reserved_time,
        deposit, info, status, created_at
        )
        VALUES (
        #{orderId}, #{propertyId}, #{userId},
        #{reservedDate}, #{reservedTime},
        #{deposit}, #{info}, 'TEMP', NOW()
        )
    </insert>

    <delete id="deleteTestReservations">
        DELETE FROM temp_reservation WHERE order_id = #{orderId};
        DELETE FROM reservations WHERE order_id = #{orderId};
    </delete>
</mapper>
