<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matdongsan.api.mapper.AgentMapper">

    <select id="selectAgentDetail" parameterType="java.lang.Long" resultType="agent">
        SELECT u.id
               ,u.id AS user_id
               ,u.name AS agent_name
               ,a.brand
               ,a.address
               ,a.address_detail
               ,a.latitude
               ,a.longitude
               ,a.profile_url
               ,Date(a.created_at)  created_at
               ,a.license_number
               ,a.review_avg
               ,a.review_count
          FROM agents a, users u
         WHERE a.id = #{agentId}
           AND a.user_id = u.id
    </select>

<!--    이전 성능 개선 전 쿼리-->
<!--    <select id="selectAgents"-->
<!--            parameterType="com.matdongsan.api.dto.agent.AgentGetRequest"-->
<!--            resultType="com.matdongsan.api.dto.agent.AgentGetResponse">-->
<!--        SELECT a.id,-->
<!--        u.name,-->
<!--        u.profile AS profileUrl,-->
<!--        u.phone,-->
<!--        u.temperature,-->
<!--        u.nickname,-->
<!--        a.profile_url AS thumbnail,-->
<!--        a.brand,-->
<!--        a.address || ' ' || a.address_detail AS address,-->
<!--        a.review_count,-->
<!--        a.review_avg,-->
<!--        a.latitude,-->
<!--        a.longitude,-->
<!--        CASE-->
<!--        WHEN #{latitude} IS NOT NULL AND #{longitude} IS NOT NULL THEN-->
<!--        6371 * acos(-->
<!--        cos(radians(#{latitude}))-->
<!--        * cos(radians(a.latitude))-->
<!--        * cos(radians(a.longitude) - radians(#{longitude}))-->
<!--        + sin(radians(#{latitude})) * sin(radians(a.latitude))-->
<!--        )-->
<!--        ELSE NULL-->
<!--        END AS distance-->
<!--        FROM agents a-->
<!--        INNER JOIN users u ON a.user_id = u.id-->
<!--        WHERE u.deleted_at IS NULL-->
<!--          AND u.role ='AGENT'-->

<!--        <if test="propertyName != null and propertyName != ''">-->
<!--            AND EXISTS (-->
<!--            SELECT 1 FROM properties p-->
<!--            WHERE p.user_id = u.id-->
<!--            AND p.title LIKE CONCAT('%', #{propertyName}, '%')-->
<!--            )-->
<!--        </if>-->

<!--        <if test="propertyType != null and propertyType != ''">-->
<!--            AND EXISTS (-->
<!--            SELECT 1 FROM properties p-->
<!--            WHERE p.user_id = u.id-->
<!--            AND p.category LIKE CONCAT('%', #{propertyType}, '%')-->
<!--            )-->
<!--        </if>-->

<!--        <if test="agentName != null and agentName != ''">-->
<!--            AND u.name LIKE CONCAT('%', #{agentName}, '%')-->
<!--        </if>-->

<!--        <if test="brandName != null and brandName != ''">-->
<!--            AND a.brand LIKE CONCAT('%', #{brandName}, '%')-->
<!--        </if>-->

<!--        &lt;!&ndash; 위치 기반 필터링 &ndash;&gt;-->
<!--        <if test="latitude != null and longitude != null and radius != null">-->
<!--            AND 6371 * acos(-->
<!--            cos(radians(#{latitude}))-->
<!--            * cos(radians(a.latitude))-->
<!--            * cos(radians(a.longitude) - radians(#{longitude}))-->
<!--            + sin(radians(#{latitude})) * sin(radians(a.latitude))-->
<!--            ) &lt;= #{radius}-->
<!--        </if>-->

<!--        ORDER BY a.created_at DESC-->
<!--        LIMIT 10-->
<!--&lt;!&ndash;        LIMIT #{size} OFFSET #{offset}&ndash;&gt;-->
<!--    </select>-->
<!--    성능 개선 후 쿼리-->
    <select id="selectAgentListWithinBounds"
            resultType="com.matdongsan.api.dto.agent.AgentGetResponse"
            parameterType="com.matdongsan.api.dto.agent.AgentGetRequest">
        SELECT
        <trim suffixOverrides=",">
            a.id,
            u.name,
            u.profile AS profileUrl,
            u.phone,
            u.temperature,
            u.nickname,
            a.profile_url AS thumbnail,
            a.brand,
            a.address || ' ' || a.address_detail AS address,
            a.review_count,
            a.review_avg,
            a.latitude,
            a.longitude
        </trim>
        FROM agents a
        INNER JOIN users u ON a.user_id = u.id
        WHERE u.deleted_at IS NULL

        <!-- PostGIS 기반 위치 필터링 -->
        <if test="swLat != null and swLng != null and neLat != null and neLng != null">
            AND location &amp;&amp; ST_MakeEnvelope(
            #{swLng}, #{swLat},
            #{neLng}, #{neLat},
            4326
            )
        </if>

        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="selectAgentMarkersWithinBounds" resultType="com.matdongsan.api.vo.AgentMarkVO">
        SELECT id, latitude, longitude
        FROM agents
        WHERE deleted_at IS NULL
        AND location &amp;&amp; ST_MakeEnvelope(
        #{swLng}, #{swLat},
        #{neLng}, #{neLat},
        4326
        )
    </select>


    <select id="countAgentListWithinBounds" resultType="int" parameterType="com.matdongsan.api.dto.agent.AgentGetRequest">
        SELECT COUNT(*)
        FROM agents a
        INNER JOIN users u ON a.user_id = u.id
        WHERE u.deleted_at IS NULL

        <!-- PostGIS 기반 위치 필터링 -->
        <if test="swLat != null and swLng != null and neLat != null and neLng != null">
            AND location &amp;&amp; ST_MakeEnvelope(
            #{swLng}, #{swLat},
            #{neLng}, #{neLat},
            4326
            )
        </if>

    </select>


    <select id="countAgents" parameterType="com.matdongsan.api.dto.agent.AgentGetRequest" resultType="java.lang.Integer">
        SELECT COUNT(*)
          FROM agents a
    INNER JOIN users u ON a.user_id = u.id
        WHERE u.deleted_at IS NULL
          AND u.role ='AGENT'
        <if test="address != null and address != ''">
            AND a.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="propertyName != null and propertyName != ''">
            AND EXISTS (
            SELECT 1
            FROM properties p
            WHERE p.user_id = u.id
            AND p.title LIKE CONCAT('%', #{propertyName}, '%')
            )
        </if>
        <if test="propertyType != null and propertyType != ''">
            AND EXISTS (
            SELECT 1
            FROM properties p
            WHERE p.user_id = u.id
            AND p.category LIKE CONCAT('%', #{propertyType}, '%')
            )
        </if>
        <if test="agentName != null and agentName != ''">
            AND u.name LIKE CONCAT('%', #{agentName}, '%')
        </if>
        <if test="brandName != null and brandName != ''">
            AND a.brand LIKE CONCAT('%', #{brandName}, '%')
        </if>
    </select>

    <insert id="insertAgent" parameterType="com.matdongsan.api.dto.agent.AgentRegisterRequest">
        INSERT INTO agents (
            user_id
            ,brand
            ,address
            ,address_detail
            ,latitude
            ,longitude
            ,profile_url
            ,license_number
            ,bio
            ,created_at
        )
        VALUES (
            #{userId}
            ,#{officeName}
            ,#{address}
            ,#{addressDetail}
            ,#{latitude}
            ,#{longitude}
            ,#{profileUrl}
            ,#{jurirno}
            ,#{bio}
            ,NOW()
        )
    </insert>

    <update id="softDeleteAgentByUserId" parameterType="java.lang.Long">
        UPDATE agents
           SET deleted_at = NOW()
         WHERE user_id = #{userId}
           AND deleted_at IS NULL
    </update>

    <update id="updateAgent">
        UPDATE agents
           SET brand = #{request.officeName}
               ,address = #{request.address}
               ,address_detail = #{request.addressDetail}
               ,latitude = #{request.latitude}
               ,longitude = #{request.longitude}
               ,profile_url = #{request.profileUrl}
               ,bio = #{request.bio}
               ,updated_at = NOW()
         WHERE user_id = #{userId}
           AND deleted_at IS NULL
    </update>

    <select id="selectagentsWithinBounds"
            parameterType="com.matdongsan.api.dto.agent.AgentBoundsRequest"
            resultType="com.matdongsan.api.dto.agent.AgentGetResponse">
        SELECT a.id, a.latitude, a.longitude, a.brand, a.address, u.nickname, u.profile as profileUrl,
        a.profile_url as thumbnail, a.review_count, a.review_avg, u.phone, u.temperature, u.name
        FROM agents a
        JOIN users u ON a.user_id = u.id
        WHERE a.latitude BETWEEN #{swLat} AND #{neLat}
        AND a.longitude BETWEEN #{swLng} AND #{neLng}
        AND u.deleted_at IS NULL
        AND u.role ='AGENT'
    </select>

    <select id="selectUserIdByAgentId" resultType="Long">
        select user_id from agents
        where id = #{agentId}
    </select>

    <select id="countPropertiesByAgent" resultType="int">
        SELECT COUNT(*)
        FROM properties p
        WHERE p.user_id = #{userId}
        AND p.deleted_at IS NULL
    </select>

    <select id="existAgent" parameterType="com.matdongsan.api.dto.agent.AgentRegisterRequest" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM agents
        WHERE user_id = #{userId}
        AND deleted_at IS NULL
        )
    </select>
</mapper>