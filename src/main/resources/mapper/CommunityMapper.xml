<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matdongsan.api.mapper.CommunityMapper">

    <insert id="insertCommunity" useGeneratedKeys="true" keyProperty="id" parameterType="com.matdongsan.api.dto.community.CommunityCreateRequest">
        INSERT INTO communities (user_id, category_id, title, content)
        VALUES (#{userId}, #{categoryId}, #{title}, #{content})
    </insert>

    <update id="updateCommunityContentAndThumbnailUrl">
        UPDATE communities
           SET content = #{content}
               ,thumbnail_url = #{thumbnailUrl}
         WHERE id = #{communityId}
           AND deleted_at IS NULL
    </update>

    <delete id="rollbackCommunityInsert">
        DELETE
          FROM communities
         WHERE id = #{communityId}
    </delete>

    <select id="selectCommunities" parameterType="com.matdongsan.api.dto.community.CommunityGetRequest" resultType="community">
        SELECT c.id
               ,u.name AS user_name
               ,c.category_id
               ,c.title
               ,c.content
               ,c.thumbnail_url
               ,c.view_count
               ,c.created_at
          FROM communities c
    INNER JOIN users u ON u.id = c.user_id
         WHERE c.deleted_at IS NULL
        <if test="categoryId != null">
            AND c.category_id = #{categoryId}
        </if>
        <if test="title != null and title != ''">
            AND c.title LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="userName != null and userName != ''">
            AND u.name LIKE CONCAT('%', #{userName}, '%')
        </if>
        <if test="titleOrContent != null and titleOrContent != ''">
            AND (
                c.title LIKE CONCAT('%', #{titleOrContent}, '%') OR
                c.content LIKE CONCAT('%', #{titleOrContent}, '%')
            )
        </if>
        <choose>
            <when test="sort == 'views'">
                ORDER BY c.view_count DESC
            </when>
            <otherwise>
                ORDER BY c.created_at DESC
            </otherwise>
        </choose>
         LIMIT #{size}
        OFFSET #{offset}
    </select>

    <select id="countCommunities" parameterType="com.matdongsan.api.dto.community.CommunityGetRequest" resultType="java.lang.Integer">
        SELECT COUNT(*)
          FROM communities c
    INNER JOIN users u ON u.id = c.user_id
         WHERE c.deleted_at IS NULL
        <if test="categoryId != null">
           AND c.category_id = #{categoryId}
        </if>
        <if test="title != null and title != ''">
           AND c.title LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="userName != null and userName != ''">
           AND u.name LIKE CONCAT('%', #{userName}, '%')
        </if>
        <if test="titleOrContent != null and titleOrContent != ''">
           AND (
               c.title LIKE CONCAT('%', #{titleOrContent}, '%') OR
               c.content LIKE CONCAT('%', #{titleOrContent}, '%')
               )
        </if>
    </select>

    <select id="selectCommunityDetail" parameterType="java.lang.Long" resultType="community">
        SELECT c.id
               ,c.user_id
               ,u.name AS user_name
               ,c.category_id
               ,c.title
               ,c.content
               ,c.image_urls
               ,c.view_count
               ,c.created_at
          FROM communities c
        INNER JOIN users u ON u.id = c.user_id
         WHERE c.id = #{id}
    </select>


    <update id="updateCommunity" parameterType="com.matdongsan.api.dto.community.CommunityUpdateRequest">
        UPDATE communities
           SET user_id = #{userId}
               ,category_id = #{categoryId}
               ,property_id = #{propertyId}
               ,title = #{title}
               ,content = #{content}
               ,image_urls = string_to_array(#{imageUrls}, ',')
               ,updated_at = NOW()
         WHERE id = #{id}
    </update>

    <update id="softDeleteCommunity" parameterType="com.matdongsan.api.dto.community.CommunityUpdateRequest">
        UPDATE communities
           SET deleted_at = NOW()
         WHERE id = #{id}
           AND user_id = #{userId}
           AND deleted_at IS NULL
    </update>


    <update id="updateCommunityViewCount" parameterType="java.lang.Long">
        UPDATE communities
           SET view_count = view_count + 1
         WHERE id = #{communityId}
           AND deleted_at IS NULL
    </update>

</mapper>
