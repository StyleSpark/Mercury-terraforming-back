<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.matdongsan.api.mapper.PropertyMapper">

    <insert id="insertProperty" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.matdongsan.api.dto.property.PropertyCreateRequest">
        INSERT INTO properties (
        user_id,
        title,
        category,
        price,
        deposit,
        rental_fee,
        floor_type,
        floor,
        room_size,
        maintenance_fee,
        thumbnail_url,
        status,
        address,
        address_detail,
        postcode,
        latitude,
        longitude,
        hit_count,
        property_type_id
        )
        VALUES (
        #{userId},
        #{title},
        #{category},
        #{price},
        #{deposit},
        #{rentalFee},
        #{floorType},
        #{floor},
        #{roomSize},
        #{maintenanceFee},
        #{thumbnailUrl},
        #{status},
        #{address},
        #{addressDetail},
        #{postcode},
        #{latitude},
        #{longitude},
        #{hitCount},
        #{propertyTypeId}
        )
    </insert>

    <select id="selectProperties" parameterType="com.matdongsan.api.dto.property.PropertyGetRequest"
            resultType="com.matdongsan.api.vo.PropertyVO">
        SELECT p.id
              ,u.nickname
              ,u.profile
              ,p.title
              ,p.category
              ,p.price
              ,p.deposit
              ,p.rental_fee
              ,p.floor_type
              ,p.floor
              ,p.room_size
              ,p.maintenance_fee
              ,p.thumbnail_url
              ,p.status
              ,p.address
              ,p.address_detail
              ,p.postcode
              ,p.latitude
              ,p.longitude
              ,p.hit_count
              ,p.property_type_id
              ,p.room_count
              ,p.bathroom_count
        FROM properties p
        INNER JOIN users u
                ON p.user_id = u.id
        WHERE P.deleted_at IS null
    </select>

    <select id="selectPropertyById" parameterType="java.lang.Long" resultType="com.matdongsan.api.vo.PropertyVO">
        SELECT p.id
            ,u.nickname
            ,u.profile
            ,p.title
            ,p.category
            ,p.price
            ,p.deposit
            ,p.rental_fee
            ,p.floor_type
            ,p.floor
            ,p.room_size
            ,p.maintenance_fee
            ,p.thumbnail_url
            ,p.status
            ,p.address
            ,p.address_detail
            ,p.postcode
            ,p.latitude
            ,p.longitude
            ,p.hit_count
            ,p.property_type_id
            ,p.room_count
            ,p.bathroom_count
        FROM properties p
        INNER JOIN users u
        ON p.user_id = u.id
        WHERE P.deleted_at IS null
          AND p.id = #{id}
    </select>

    <update id="softDeleteProperty" parameterType="com.matdongsan.api.dto.property.PropertyDeleteRequest">
        UPDATE properties
           SET deleted_at = NOW()
         WHERE  id = #{id}
           AND deleted_at IS null
           AND user_id = #{userId}
    </update>

    <update id="updateProperty" parameterType="com.matdongsan.api.dto.property.PropertyUpdateRequest">
        UPDATE properties
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="category != null">category = #{category},</if>
            <if test="price != null">price = #{price},</if>
            <if test="deposit != null">deposit = #{deposit},</if>
            <if test="rentalFee != null">rental_fee = #{rentalFee},</if>
            <if test="floorType != null">floor_type = #{floorType},</if>
            <if test="floor != null">floor = #{floor},</if>
            <if test="roomSize != null">room_size = #{roomSize},</if>
            <if test="maintenanceFee != null">maintenance_fee = #{maintenanceFee},</if>
            <if test="thumbnailUrl != null">thumbnail_url = #{thumbnailUrl},</if>
            <if test="status != null">status = #{status},</if>
            <if test="address != null">address = #{address},</if>
            <if test="addressDetail != null">address_detail = #{addressDetail},</if>
            <if test="postcode != null">postcode = #{postcode},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="hitCount != null">hit_count = #{hitCount},</if>
            <if test="propertyTypeId != null">property_type_id = #{propertyTypeId}</if>
        </trim>
        WHERE id = #{id}
        AND deleted_at IS NULL
    </update>

    <select id="getFavoritePropertyIds" resultType="long">
        SELECT property_id
        FROM favorites
        WHERE user_id = #{userId}
        AND property_id IN
        <foreach collection="propertyIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
<!--나중에 필요할듯-->
    <update id="updateThumbnailUrl"
            parameterType="map">
        UPDATE properties
        SET thumbnail_url = #{thumbnailUrl}
        WHERE id = #{propertyId}
        AND deleted_at IS NULL
    </update>

    <select id="selectUserProperties" parameterType="long" resultType="com.matdongsan.api.vo.PropertyVO">
        SELECT id,title,category,price,deposit,rental_fee,floor_type,floor,maintenance_fee,thumbnail_url,status,address,hit_count
        FROM properties
        WHERE user_id = #{id}
          AND deleted_at is null
        ORDER BY created_at DESC;
    </select>

    <!-- 기존 태그 조회 -->
    <select id="findTagsByNames" resultType="com.matdongsan.api.vo.Tag">
        SELECT id, name FROM tags
        WHERE name IN
        <foreach item="name" collection="list" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <!-- 태그 삽입, 중복 무시 -->
    <insert id="insertIgnoreDuplicates">
        INSERT INTO tags (name)
        VALUES
        <foreach item="name" collection="list" separator=",">
            (#{name})
        </foreach>
        ON CONFLICT (name) DO NOTHING
    </insert>


    <insert id="bulkInsert">
        INSERT INTO property_tags (property_id, tag_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.propertyId}, #{item.tagId})
        </foreach>
    </insert>

    <select id="getTags" parameterType="long" resultType="com.matdongsan.api.vo.Tag">
        SELECT t.id,t.name
        FROM property_tags pt
        JOIN tags t ON pt.tag_id = t.id
        WHERE pt.property_id = #{id}
    </select>
</mapper>
